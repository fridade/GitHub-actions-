name: CI/CD Pipeline for PHP Application

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Google Cloud CLI
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      # Step 3: Authenticate Docker to use Google Container Registry
      - name: Authenticate Docker with GCR
        run: |
          gcloud auth configure-docker --quiet

      # Step 4: Build the Docker image
      - name: Build Docker Image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/php-app:${{ github.sha }} .

      # Step 5: Push Docker image to GCR
      - name: Push Docker Image to GCR
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/php-app:${{ github.sha }}

      # Step 6: Deploy to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy php-app \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/php-app:${{ github.sha }} \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars ENV_VAR1=${{ secrets.ENV_VAR1 }},ENV_VAR2=${{ secrets.ENV_VAR2 }}

      # Step 7: Run Unit/Integration Tests
      - name: Run Unit/Integration Tests
        run: |
          docker run --rm gcr.io/${{ secrets.GCP_PROJECT_ID }}/php-app:${{ github.sha }} php vendor/bin/phpunit

      # Step 8: Retrieve and Log Public IP Address
      - name: Retrieve Public IP Address
        run: |
          ./scripts/get_cloud_run_ip.sh ${{ secrets.GCP_REGION }} php-app
